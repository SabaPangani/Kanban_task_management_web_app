// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  boards    Board[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Board {
  id        String   @id @default(uuid())
  title     String
  columns   Column[]
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Column {
  id        String   @id @default(uuid())
  name      String
  boardId   String
  board     Board    @relation(fields: [boardId], references: [id])
  tasks     Task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Status {
  Todo
  Doing
  Done
}

model Task {
  id          String    @id @default(uuid())
  title       String
  description String?
  status      Status
  columnId    String
  column      Column    @relation(fields: [columnId], references: [id])
  subtasks    Subtask[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Subtask {
  id         String   @id @default(uuid())
  title      String
  isComplete Boolean  @default(false)
  taskId     String
  task       Task     @relation(fields: [taskId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
